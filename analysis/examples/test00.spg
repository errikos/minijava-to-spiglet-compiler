MAIN
	MOVE TEMP 4 10
	// Check whether array allocation size is positive
	MOVE TEMP 5 LT TEMP 4 1
	CJUMP TEMP 5 L1
	ERROR
L1	// Start of array allocation -->
	MOVE TEMP 7 PLUS TEMP 4 1
	MOVE TEMP 8 TIMES TEMP 7 4
	MOVE TEMP 9 HALLOCATE TEMP 8
	MOVE TEMP 6 TIMES TEMP 4 4
	// Initialize allocated array
	MOVE TEMP 10 0  // Zero value register
	MOVE TEMP 11 4  // Offset register
L2	MOVE TEMP 12 LT TEMP 11 TEMP 8
	CJUMP TEMP 12 L3
	MOVE TEMP 13 PLUS TEMP 9 TEMP 11
	HSTORE TEMP 13 0 TEMP 10
	MOVE TEMP 11 PLUS TEMP 11 4
	JUMP L2
L3	HSTORE TEMP 9 0 TEMP 4  // Store array length
	// <-- End of array allocation
	MOVE TEMP 2 TEMP 9
	MOVE TEMP 14 0
	MOVE TEMP 3 TEMP 14
	MOVE TEMP 15 2
	MOVE TEMP 16 MINUS TEMP 3 TEMP 15
	MOVE TEMP 3 TEMP 16
	// Start of array assignment -->
	MOVE TEMP 17 12
	MOVE TEMP 18 4
	MOVE TEMP 20 LT TEMP 18 0
	CJUMP TEMP 20 L4
	ERROR
L4	HLOAD TEMP 19 TEMP 2 0
	MOVE TEMP 20 LT TEMP 19 TEMP 18
	CJUMP TEMP 20 L5
	ERROR
L5	MOVE TEMP 21 PLUS TEMP 18 1
	MOVE TEMP 21 TIMES TEMP 21 4
	MOVE TEMP 21 PLUS TEMP 21 TEMP 2
	HSTORE TEMP 21 0 TEMP 17
	// <-- End of array assignment
	MOVE TEMP 22 4
	MOVE TEMP 24 LT TEMP 22 0
	CJUMP TEMP 24 L6
	ERROR
L6	HLOAD TEMP 23 TEMP 2 0
	MOVE TEMP 24 LT TEMP 23 TEMP 22
	CJUMP TEMP 24 L7
	ERROR
L7	MOVE TEMP 25 PLUS TEMP 22 1
	MOVE TEMP 25 TIMES TEMP 25 4
	MOVE TEMP 25 PLUS TEMP 25 TEMP 2
	HLOAD TEMP 26 TEMP 25 0
	PRINT TEMP 26
END
